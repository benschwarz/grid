$grid-max-width:          1140px;
$grid-max-columns:        12;
$grid-column-width:       4.85%;
$grid-gutter-width:       3.8%;

@function column-width($count: 1) {
  @return ($count * ($grid-column-width + $grid-gutter-width) - $grid-gutter-width);
}

@mixin column($count: 1) {
  width: column-width($count);
}

/* 
  Use border-box on every element
*/

* {
  box-sizing:         border-box;
  -o-box-sizing:      border-box;
  -ms-box-sizing:     border-box;
  -moz-box-sizing:    border-box;
  -webkit-box-sizing: border-box;
}

/*
  Grid container
*/

.grid {
  margin: 0 auto;
  max-width: $grid-max-width; 
  padding: 0 $grid-gutter-width;
  
  letter-spacing: -4px;
  word-spacing: -4px;
}

/*
  Create column-* classes
*/
@for $i from 1 through $grid-max-columns {
  .column-#{ $i } { 
    @include column( $i );
    display: inline-block;

    letter-spacing: normal; 
    word-spacing: normal;

    vertical-align: top;
    margin-right: $grid-gutter-width;
  }

  .before-column-skip-#{ $i } {
    margin-left: column-width( $i ) + $grid-gutter-width;
  }

  .after-column-skip-#{ $i } {
    margin-right: column-width( $i ) + $grid-gutter-width;
  }
}

/*
  Ratio classes (syntactic sugar)
*/
.column-full { @extend .column-#{ round( $grid-max-columns ) } }
.column-half { @extend .column-#{ round( $grid-max-columns / 2 ) } }
.column-third { @extend .column-#{ round( $grid-max-columns / 3 ) } }
.column-quarter { @extend .column-#{ round( $grid-max-columns / 4 ) } }

/* 
  Last column item
*/
.column-omega, .column-last {
  margin-right: 0;
}